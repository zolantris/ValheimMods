<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"
            Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"/>
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{E9B48BE9-4D8E-44DB-961A-D7C279B2CA2B}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>ValheimVehicles</RootNamespace>
        <AssemblyName>ValheimVehicles</AssemblyName>
        <TargetFramework>netstandard2.0</TargetFramework>
        <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
        <FileAlignment>512</FileAlignment>
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'ReleaseBETA Archive|AnyCPU' ">
        <OutputPath>bin\ReleaseBETA Archive\</OutputPath>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <OutputPath>bin\Release\</OutputPath>
    </PropertyGroup>
    <Import Project="$(SolutionDir)/valheim.targets"/>

    <ItemGroup>
        <Compile Include="ValheimVehicles.GUI\DropdownRefreshHover.cs"/>
        <Compile Include="ValheimVehicles.Interfaces\IInitProvider.cs"/>
        <Compile Include="ValheimVehicles.Interfaces\IRudderControls.cs"/>
        <Compile Include="ValheimVehicles.Interfaces\IValheimShip.cs"/>
        <Compile Include="ValheimVehicles.Interfaces\IVehicleMovement.cs"/>
        <Compile Include="ValheimVehicles.Interfaces\IVehiclePiecesController.cs"/>
        <Compile Include="ValheimVehicles.Interfaces\IVehicleShip.cs"/>
        <Compile Include="ValheimVehicles.Injections\UnityBurstInjection.cs"/>
        <Compile Include="ValheimVehicles.Providers\ProviderInitializers.cs"/>
        <Compile Include="ValheimVehicles.Providers\WearNTearProvider.cs"/>
        <Compile Include="ValheimVehicles.Structs\GameCacheValue.cs"/>
        <Compile Include="ValheimVehicles.Structs\ShipFloatation.cs"/>
        <Compile Include="ValheimVehicles.Structs\TempPieceData.cs"/>
        <Compile Include="ValheimVehicles.Structs\VehicleConfig.cs"/>
        <Compile Include="ValheimVehicles.Structs\VehicleGuiItemTypes.cs"/>
        <Compile Include="ValheimVehicles.Structs\VehicleZdoVars.cs"/>
        <Compile Include="ValheimVehicles.Vehicles\Controllers\VehiclePiecesJobs.cs"/>
        <Compile Include="ValheimVehicles.Vehicles\Structs\TempPieceData.cs"/>
        <Compile Include="ValheimVehicles.Vehicles\Structs\VehicleConfig.cs"/>
        <Compile Include="ValheimVehiclesPlugin.cs"/>
        <Compile Include="Properties\AssemblyInfo.cs"/>
    </ItemGroup>
    <ItemGroup>
        <Folder Include="ValheimVehicles.DynamicLocations\"/>
        <Folder Include="ValheimVehicles.Propulsion\"/>
        <Folder Include="ValheimVehicles.Config\"/>
        <Folder Include="ValheimVehicles.Prefabs\"/>
        <Folder Include="ValheimVehicles.Constants\"/>
        <Folder Include="ValheimVehicles.Patches\"/>
        <Folder Include="ValheimVehicles.Helpers\"/>
        <Folder Include="ValheimVehicles.ModSupport\"/>
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\SentryUnityWrapper\SentryUnityWrapper.csproj"/>
        <ProjectReference Include="..\Shared\Shared.csproj"/>
        <ProjectReference Include="..\ValheimRAFT\ValheimRAFT.csproj"/>
        <ProjectReference Include="..\DynamicLocations\DynamicLocations.csproj"/>
        <ProjectReference Include="..\ZdoWatcher\ZdoWatcher.csproj"/>
    </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets"/>
    <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
         Other similar extension points exist, see Microsoft.Common.targets.
    <Target Name="BeforeBuild">
    </Target>
    <Target Name="AfterBuild">
    </Target>
    -->

    <!--    <Target Name="Copy_To_R2ModMan" Condition=" '$(Configuration)|$(Platform)' == 'Debug Run ClientServer|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Client|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Client|AnyCPU' " AfterTargets="PostBuildEvent">-->
    <!--        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).dll&quot; &quot;$(PluginDeployPath)\$(AssemblyName).dll&quot;"/>-->
    <!--        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).pdb&quot; &quot;$(PluginDeployPath)\$(AssemblyName).pdb&quot;"/>-->
    <!--    </Target>-->
    <!--    <Target KeepDuplicateOutputs="false" Name="copy_to_valheim_server" Condition=" '$(Configuration)|$(Platform)' == 'Debug Run ClientServer|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Client Server|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Client Server|AnyCPU' " AfterTargets="PostBuildEvent">-->
    <!--        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).dll&quot; &quot;$(ValheimServerPath)\$(PluginDeployTarget)\$(AssemblyName).dll&quot;"/>-->
    <!--        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).pdb&quot; &quot;$(ValheimServerPath)\$(PluginDeployTarget)\$(AssemblyName).pdb&quot;"/>-->
    <!--    </Target>-->
    <!--    <Target Name="Run_Valheim_Server" Condition=" '$(Configuration)|$(Platform)' == 'Debug Run ClientServer|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Client Server|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Client Server|AnyCPU' " AfterTargets="copy_to_valheim_server">-->
    <!--        &lt;!&ndash;        <Exec Command="cd &quot;$(ValheimServerPath)&quot;&ndash;&gt;-->
    <!--        &lt;!&ndash;        powershell Start-Process -FilePath '$(ValheimServerPath)\start_headless_server.bat'"/>&ndash;&gt;-->
    <!--        &lt;!&ndash;    Windows Terminal  https://learn.microsoft.com/en-us/windows/terminal/  &ndash;&gt;-->
    <!--        &lt;!&ndash;        <Exec Command="powershell Stop-Task -Name ValheimServer"/>&ndash;&gt;-->
    <!--        <Exec Command="wt.exe -w 1 &#45;&#45;focus -d &quot;$(ValheimServerPath)&quot; &#45;&#45;title ValheimServer powershell Start-Process -NoNewWindow -FilePath '$(ValheimServerPath)\start_headless_server.bat'"/>-->
    <!--    </Target>-->
    <!--    <Target Name="Run_Valheim" Condition="'$(Configuration)|$(Platform)' == 'Debug Run ClientServer|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Client|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Client|AnyCPU' " AfterTargets="Copy_To_R2ModMan">-->
    <!--        &lt;!&ndash;        <Exec Command="powershell Stop-Task -Name ValheimClient"/>&ndash;&gt;-->
    <!--        &lt;!&ndash;    -console -char ZOL -server 50.39.165.163:2456 -password 12345    &ndash;&gt;-->
    <!--        <Exec Command="wt.exe -w 2 &#45;&#45;title ValheimClient &quot;$(GamePath)\valheim.exe&quot; -console &#45;&#45;doorstop-enable true &#45;&#45;doorstop-target &quot;$(BepInExPath)\BepInEx.Preloader.dll&quot;"/>-->
    <!--        &lt;!&ndash;                <Exec Command="wt.exe -w 1 sp -d &quot;$(ValheimServerPath)&quot; &#45;&#45;title Valheim_Client powershell Start-Process -NoNewWindow -FilePath '$(ValheimServerPath)\start_headless_server.bat'"/>&ndash;&gt;-->
    <!--    </Target>-->
    <!--    <Target Name="Generate_Mod_Archive" Condition="'$(Configuration)|$(Platform)' == 'Release Archive|AnyCPU'" AfterTargets="PostBuildEvent">-->
    <!--        <PropertyGroup>-->
    <!--            <RepoDir>$(OutDir)..\..\</RepoDir>-->
    <!--            <AssetsDir>$(RepoDir)Assets\</AssetsDir>-->
    <!--            <ModOutputDir>$(OutDir)ModVersions\</ModOutputDir>-->
    <!--            <TmpDir>$(OutDir)tmp\</TmpDir>-->
    <!--            <ThunderStoreDir>$(RepoDir)ThunderStore\</ThunderStoreDir>-->
    <!--            <ThunderStoreName>Thunderstore</ThunderStoreName>-->
    <!--            <NexusName>Nexus</NexusName>-->
    <!--            <ModNameVersion>$(AssemblyName)-$(ApplicationVersion).zip</ModNameVersion>-->
    <!--        </PropertyGroup>-->
    <!--        <Exec Command="if exist &quot;$(TmpDir)plugins\Assets&quot; rd /s /q &quot;$(TmpDir)plugins\Assets&quot;"/>-->
    <!--        <Exec Command="if exist &quot;$(TmpDir)&quot; rd /s /q &quot;$(TmpDir)&quot;"/>-->

    <!--        <Exec Command="if not exist &quot;$(ModOutputDir)&quot; mkdir &quot;$(ModOutputDir)&quot;"/>-->
    <!--        <Exec Command="if not exist &quot;$(TmpDir)&quot; mkdir &quot;$(TmpDir)&quot;"/>-->
    <!--        <Exec Command="if not exist &quot;$(TmpDir)plugins&quot; mkdir &quot;$(TmpDir)plugins&quot;"/>-->

    <!--        <Exec Command="copy &quot;$(OutDir)ValheimRAFT.dll&quot; &quot;$(TmpDir)plugins\ValheimRAFT.dll&quot;"/>-->
    <!--        <Exec Command="copy &quot;$(OutDir)ValheimRAFT.pdb&quot; &quot;$(TmpDir)plugins\ValheimRAFT.pdb&quot;"/>-->
    <!--        <Exec Command="copy &quot;$(RepoDir)README.md&quot; &quot;$(TmpDir)README.md&quot;"/>-->

    <!--        &lt;!&ndash; Copy Assets &ndash;&gt;-->
    <!--        <Exec Command="xcopy /d &quot;$(AssetsDir)&quot; &quot;$(TmpDir)plugins\Assets\&quot; /E/H"/>-->
    <!--        <Exec Command="del &quot;$(TmpDir)plugins\Assets\*.png.meta&quot;"/>-->


    <!--        &lt;!&ndash;  Thunderstore and Nexus store may need different deploys  &ndash;&gt;-->

    <!--        <Exec Command="xcopy /d &quot;$(ThunderStoreDir)&quot; &quot;$(TmpDir)&quot; /E/H"/>-->

    <!--        &lt;!&ndash; delete duplicate mod version&ndash;&gt;-->
    <!--        <Exec Command="if exist &quot;$(ModOutputDir)$(ThunderStoreName)-$(ModNameVersion)&quot; del /s /q &quot;$(ModOutputDir)$(ThunderStoreName)-$(ModNameVersion)&quot;"/>-->
    <!--        <Exec Command="if exist &quot;$(ModOutputDir)$(NexusName)-$(ModNameVersion)&quot; del /s /q &quot;$(ModOutputDir)$(NexusName)-$(ModNameVersion)&quot;"/>-->
    <!--        <Exec Command="if exist &quot;$(ModOutputDir)libs-$(ApplicationVersion).zip&quot; del /s /q &quot;$(ModOutputDir)libs-$(ApplicationVersion).zip&quot;"/>-->


    <!--        <Exec Command="powershell Compress-Archive '$(TmpDir)\*' '$(ModOutputDir)$(ThunderStoreName)-$(ModNameVersion)'"/>-->
    <!--        <Exec Command="powershell Compress-Archive '$(TmpDir)\plugins\*' '$(ModOutputDir)$(NexusName)-$(ModNameVersion)'"/>-->
    <!--        <Exec Command="powershell Compress-Archive '$(RepoDir)libs\*' '$(ModOutputDir)libs-$(ApplicationVersion).zip'"/>-->
    <!--    </Target>-->

</Project>
